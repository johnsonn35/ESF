var relatedTable = FeatureSetByName($map, "Advisories", ['GUID', 'Double_', 'Fish'], False)

// Define a common attribute, then create a filter statement based on that attribute
// Want to get features where GUID from waterbodies table matches GUID in advisories table
var commonAttr = StandardizeGuid($feature.GUID, 'digits-hyphen-braces')
var filterStatement = 'GUID = @commonAttr'

// Now, actually filter the data and assign it to a variable
var relatedData = Filter(relatedTable, filterStatement)

var dblCount = 0
var allOtherSpeciesCount = 0

// Iterate through advisories to check for fish that can be doubled
for (var f in relatedData){

    if (f.Double_ == "Yes"){
        dblCount ++
    }

    if (f.Fish == "All Other Species"){
      allOtherSpeciesCount ++
    }
}

var carpCount = 0

// Need to also check if the waterbody shows a statewide guideline for carp, since it can be doubled
if ($feature.DisplaySSFG != "No" && $feature.AllDNE != "Yes"){
  
  for (var i in relatedData){
    
    if (i.Fish == "Carp"){
        carpCount ++
    }
  }

  if (carpCount == 0 && allOtherSpeciesCount == 0){
    dblCount ++
  }
}

if (dblCount > 0){
  DefaultValue(TextFormatting.NewLine + '(2x):', null)
}
