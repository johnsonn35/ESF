// Access 'Advisories' related table as a FeatureSet 
var relatedTable = FeatureSetByName($map, "Advisories", ['GUID', 'Chemical_of_Concern'], False)

// Define a common attribute, then create a filter statement based on that attribute
// Want to get features where GUID from waterbodies table matches GUID in advisories table
var commonAttr = StandardizeGuid($feature.GUID, 'digits-hyphen-braces')
var filterStatement = 'GUID = @commonAttr'

// Now, actually filter the data and assign it to a variable
var relatedData = Filter(relatedTable, filterStatement)

// Create an empty pop-up string
var popupString = ''

// If PFOS appears as a chemical of concern, want to print a warning
var pfosCount = 0

for (var i in relatedData){
  When((Find("PFOS", i.Chemical_of_Concern) > -1), pfosCount++, pfosCount = pfosCount)
}

if (pfosCount > 0 && $feature.AllDNE != "Yes"){
  popupString = "PFOS canâ€™t be reduced by trimming and cooking. Do not double MI Servings." + TextFormatting.NewLine
}

DefaultValue(popupString, null)
